// <auto-generated />
using LojaManoel.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaManoel.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250528024207_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LojaManoel.Models.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Comprimento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Largura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Caixas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Altura = 30m,
                            Comprimento = 80m,
                            Largura = 40m,
                            Nome = "Caixa 1"
                        },
                        new
                        {
                            Id = 2,
                            Altura = 80m,
                            Comprimento = 40m,
                            Largura = 50m,
                            Nome = "Caixa 2"
                        },
                        new
                        {
                            Id = 3,
                            Altura = 50m,
                            Comprimento = 60m,
                            Largura = 80m,
                            Nome = "Caixa 3"
                        });
                });

            modelBuilder.Entity("LojaManoel.Models.CaixaSelecionada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("CaixasSelecionadas");
                });

            modelBuilder.Entity("LojaManoel.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("LojaManoel.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Caixa")
                        .HasColumnType("int");

                    b.Property<int?>("CaixaId")
                        .HasColumnType("int");

                    b.Property<int?>("CaixaSelecionadaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Comprimento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Largura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.HasIndex("CaixaSelecionadaId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("LojaManoel.Models.CaixaSelecionada", b =>
                {
                    b.HasOne("LojaManoel.Models.Pedido", "Pedido")
                        .WithMany("Caixas")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LojaManoel.Models.Produto", b =>
                {
                    b.HasOne("LojaManoel.Models.Caixa", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CaixaId");

                    b.HasOne("LojaManoel.Models.CaixaSelecionada", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CaixaSelecionadaId");

                    b.HasOne("LojaManoel.Models.Pedido", "Pedido")
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("LojaManoel.Models.Caixa", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LojaManoel.Models.CaixaSelecionada", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LojaManoel.Models.Pedido", b =>
                {
                    b.Navigation("Caixas");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
